/* Tres columnas difrentes en grid
   contenido al centro más grabde y 2 sidebars laterales más pequeñas */
html {
    box-sizing: border-box;
    font-size: 62.5%;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    font-family: 'Raleway', sans-serif;
    font-size: 1.6rem;
    line-height: 2;
}

img {
    max-width: 100%;
}

h1 {
    font-size: 4rem;
}

h2 {
    font-size: 3.2rem;
}

.contenedor {
    max-width: 1200px;
    width: 95%;
    margin: 0 auto;
}

p {
    font-size: 2rem;
}

.entrada-blog a {
    display: inline-block;
    background-color: #2196F3;
    color: white;
    padding: 10px 20px;
    text-decoration: none;
    font-weight: bold;
    text-transform: uppercase;
}


/** CODIGO AQUI **/
@media (min-width: 768px) {
    .contenedor-grid { /* Elemento padre */
        display: grid; /* Acceso a CSS grid*/
        grid-template-areas: "izquierda contenido derecha"; /* Es como dibujar el contenido */
        grid-template-columns: 1fr 3fr 1fr;
        /* grid-template-columns: 20% 60% 20%; Distribución del contenido con porcentajes*/
        grid-auto-flow: column; /* El flujo en que se acomodan los elementos sera en columnas */
        column-gap: 2rem; /* Separación entre columnas */
    }

    /*Movemos nuestro contenido principal al centro lo de 2 / 3 es 
    el layout del grid y lo puedes ver con dev edition firefox y vista de grid*/
    .contenido-principal {
        /*grid-column: 2 /3;*/
        grid-area: contenido; /* Es mejor trabajar así en vez de números y columnas */
    }

    /*Damos el estilo a las sidebars*/
    .sidebar-1 {
        /*grid-column: 1 / 2;*/
        grid-area: izquierda; /* Sintaxis más clara y descriptiva */
    }
}

/*** Notas Adicionales ***/
/* 
Grid acomoda los elemtos conforme los lee en el HTML
*** Colocación automatica del diseño de cuadricala esto es "fenomeno" que
sucede con grid pues coloca los elemtos de manera automatica. Se soluciona con
"grid-auto-flow: column"

*/